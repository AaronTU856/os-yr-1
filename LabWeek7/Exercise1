# Write a shell script ex1.sh that prints “Shell Scripting is Fun!” on the screen 
# Modify the shell script ex2.sh from exercise 1 to include a variable. The variable will hold the contents of the message “Shell Scripting is Fun!”
# Store the output of the command “hostname” in a variable. Display “This script is running on _.” where “_” is the output of the “hostname” command.
# Write a shell script to check to see if the file “file_path” exists. If it does exist, display “file_path passwords are enabled.” Next, check to see if you can write to the file. If you can, display “You have permissions to edit “file_path.””If you cannot, display “You do NOT have permissions to edit “file_path””

# if [ -e “$FILE” ]
#  then
#    echo “$FILE passwords are enabled”
# fi
# if [ -x “$FILE” ]
 # then
 #   echo “You have permission to execute $FILE”
 # else
 #   echo “You do Not have permissions to execute $FILE”
# fi

# Write a shell script that that allows a user to select an action from the menu. The actions are to show the disk usage, show the uptime on the system, and show the users that are logged into the system. Tell the user to enter q to quit. Display "Goodbye!" just before the script exits.

# If the user enters anything other than 1 , 2 , 3 , or q , tell them that it is an "Invalid option."

# You can show the disk usage by using the df command. To show the uptime, use the uptime command. To show the users logged into the system, use the who command. Print a blank line after the output of each command using echo.

# Menu 

While TRUE
do
    echo "1. Show Disk Usage."
    echo "2. Show System uptime."
    echo "3. Show the users that are logged into the system."
    read -p "What would you like to do? (Enter q to quit.) " INPUT
        case "${INPUT}" in
    "1")
            df
        echo
        ;;
    "2")
            uptime
        echo
        ;;
    "3")
            who
        echo
        ;;
    "q")
            echo "Goodbye!"
        exit 0
        ;;
    *)
    echo "Invalid Option."
        echo
    continue
        ;;
    esac
done


# select lng in Bash Java C++ Quit
# do
#    case $lng in
#        "Bash)"
#            echo "$lng - that's what we're talking about";;
#        "Java")
#           echo "$lng - is your VM ready?";;
#        "C++")
#           echo "$lng - let's prepare for a lot of compilation";;
#        "Quit")
#           echo "We're done"
#           break;;
#        *)
#           echo "Ooops";;
#    esac
# done